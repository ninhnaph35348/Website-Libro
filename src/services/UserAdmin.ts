import { IUser } from "./../interfaces/User";
import instance from "../config/axios";

// üü¢ L·∫•y danh s√°ch Admin
export const getAllAdmins = async () => {
  try {
    const { data } = await instance.get("users"); // üîπ L·∫•y t·∫•t c·∫£ users
    return data.filter((user: IUser) => user.role === "admin"); // üîπ L·ªçc admin ·ªü frontend
  } catch (error: any) {
    console.error(
      "L·ªói khi l·∫•y danh s√°ch admin:",
      error.response?.data || error.message
    );
    throw new Error(
      error.response?.data?.message || "L·ªói khi l·∫•y danh s√°ch admin"
    );
  }
};

// üü¢ L·∫•y th√¥ng tin Admin theo ID
export const getAdminById = async (id: number | string) => {
  try {
    const { data } = await instance.get(`users/${id}`);
    return data;
  } catch (error: any) {
    console.error(
      "L·ªói khi l·∫•y th√¥ng tin admin:",
      error.response?.data || error.message
    );
    throw new Error(
      error.response?.data?.message || "L·ªói khi l·∫•y th√¥ng tin admin"
    );
  }
};

// üü¢ Th√™m Admin m·ªõi
export const createAdmin = async (adminData: any, avatarFile?: File) => {
  try {
    const formData = new FormData();
    formData.append("username", adminData.username);
    formData.append("email", adminData.email);
    formData.append("role", adminData.role);
    formData.append("fullname", adminData.fullname); // üî• Th√™m fullname v√†o ƒë√¢y!
    formData.append("password", adminData.password);
    formData.append("status", adminData.status);
    formData.append("address", adminData.address);
    formData.append("phone", adminData.phone);
    formData.append("birth_date", adminData.birth_date);

    if (avatarFile) {
      formData.append("avatar", avatarFile); // üü¢ Th√™m avatar v√†o formData
    }

    const { data } = await instance.post("users", formData, {
      headers: { "Content-Type": "multipart/form-data" }, // üîπ G·ª≠i d·∫°ng multipart
    });

    return data;
  } catch (error: any) {
    console.error("L·ªói khi t·∫°o admin:", error.response?.data || error.message);
    throw new Error(error.response?.data?.message || "L·ªói khi t·∫°o admin");
  }
};

// üü¢ C·∫≠p nh·∫≠t th√¥ng tin Admin
export const updateAdmin = async (adminData: IUser, id: number | string) => {
  try {
    console.log("üîç D·ªØ li·ªáu tr∆∞·ªõc khi g·ª≠i l√™n API:", id, typeof id);

    if (!id) throw new Error("ID kh√¥ng h·ª£p l·ªá!");

    const { data } = await instance.put(`users/edit/${id}`, adminData);

    console.log("‚úÖ Ph·∫£n h·ªìi t·ª´ API:", data);
    return data;
  } catch (error: any) {
    console.error(
      "‚ùå L·ªói khi c·∫≠p nh·∫≠t admin:",
      error.response?.data || error.message
    );
    throw new Error(error.response?.data?.message || "L·ªói khi c·∫≠p nh·∫≠t admin");
  }
};

// üü¢ X√≥a Admin
export const deleteAdmin = async (id: number | string) => {
  try {
    console.log("X√≥a admin v·ªõi ID:", id);
    const { data } = await instance.put(`users/${id}`);
    return data;
  } catch (error: any) {
    console.error("L·ªói khi x√≥a admin:", error.response?.data || error.message);
    throw new Error(error.response?.data?.message || "L·ªói khi x√≥a admin");
  }
};
