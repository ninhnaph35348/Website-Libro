import instance from "../config/axios";
import { IReviews } from "../interfaces/Reviews";

export const getAllReviews = async () => {
  try {
    const { data } = await instance.get("reviews/");
    return Array.isArray(data) ? data : Object.values(data);
  } catch (error) {
    console.error("L·ªói API:", error);
    return [];
  }
};

// API cho client: L·∫•y ƒë√°nh gi√° theo product_code
export const getReviewsForClient = async (
  productCode: string
): Promise<IReviews[]> => {
  try {
    const url = `review-products/${productCode}`;
    const { data } = await instance.get(url);
    // console.log("API getReviewsForClient response:", data);
    if (!data || typeof data !== "object") return [];
    const reviews = Array.isArray(data) ? data : Object.values(data);
    return reviews;
  } catch (error) {
    console.error("L·ªói API getReviewsForClient:", error);
    return [];
  }
};

export const getReviewById = async (id: number | string): Promise<IReviews> => {
  try {
    const { data } = await instance.get(`reviews/${id}`);
    return data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y chi ti·∫øt review:", error);
    throw new Error("L·ªói khi l·∫•y chi ti·∫øt review");
  }
};

export const addReview = async (
  reviewData: Partial<IReviews>
): Promise<IReviews> => {
  try {
    const { data } = await instance.post("reviews/", reviewData);
    return data;
  } catch (error) {
    console.error("L·ªói khi th√™m review:", error);
    throw error;
  }
};

export const onUpdateStatus = async (
  id: number | string,
  status: number
): Promise<IReviews> => {
  try {
    // console.log("üîπ G·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t tr·∫°ng th√°i:", { id, status });
    const { data } = await instance.put(`reviews/edit/${id}`, { status });
    console.log("‚úÖ D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API:", data);
    return data;
  } catch (error) {
    console.error("‚ùå L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i review:", error);
    throw new Error("L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i review");
  }
};

export const hideReview = async (id: number | string): Promise<IReviews> => {
  try {
    const { data } = await instance.put(`reviews/${id}`, {
      del_flg: 1,
      updated_at: new Date().toISOString(),
    });
    return data;
  } catch (error) {
    console.error("L·ªói khi ·∫©n review:", error);
    throw new Error("L·ªói khi ·∫©n review");
  }
};

export const deleteReview = async (id: number | string): Promise<void> => {
  try {
    await instance.delete(`reviews/${id}`);
  } catch (error) {
    console.error("L·ªói khi x√≥a ƒë√°nh gi√°:", error);
    throw new Error("L·ªói khi x√≥a ƒë√°nh gi√°");
  }
};
